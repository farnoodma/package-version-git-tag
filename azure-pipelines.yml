# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master

pool:
  vmImage: ubuntu-latest

strategy:
  matrix:
    Node.js 8.3.0:
      node_version: 8.3.0
    Node.js 8.x:
      node_version: 8.x
    Node.js 9.0.0:
      node_version: 9.0.0
    Node.js 9.x:
      node_version: 9.x
    Node.js 10.0.0:
      node_version: 10.0.0
    Node.js 10.x:
      node_version: 10.x
    Node.js 11.0.0:
      node_version: 11.0.0
    Node.js 11.x:
      node_version: 11.x
    Node.js 12.0.0:
      node_version: 12.0.0
    Node.js 12.x:
      node_version: 12.x
    Node.js 13.0.0:
      node_version: 13.0.0
    Node.js 13.x:
      node_version: 13.x

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: Install Node.js

  - script: |
      echo node $(node --version)
      echo npm $(npm --version)
    displayName: Show node and npm version

  - script: npm ci || npm install
    displayName: Install dependencies

  # see https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/cross-platform-scripting?tabs=yaml&view=azure-devops#switch-based-on-platform
  - bash: |
      export BranchName=$(git name-rev --name-only HEAD)
      echo "##vso[task.setvariable variable=BranchName]$BranchName"
    displayName: Set Git branch name

  # see https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?tabs=yaml&view=azure-devops
  - script: |
      echo "variables['Build.SourceBranch'] / ${{ variables['Build.SourceBranch'] }}"
      echo "variables['Build.SourceBranchName'] / ${{ variables['Build.SourceBranchName'] }}"
      echo "variables['System.PullRequest.SourceBranch'] / ${{ variables['System.PullRequest.SourceBranch'] }}"
      echo "variables['System.PullRequest.TargetBranch'] / ${{ variables['System.PullRequest.TargetBranch'] }}"
      echo "variables['BranchName'] / ${{ variables['BranchName'] }}"
    displayName: Show variables['*Build*']

  - script: npm test
    displayName: Run test
    # Packages not used in Linter and / or test code cannot be tested with CI, so exclude branches of update such packages
    condition: |
      and(
        succeeded(),
        not(or(
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/can-npm-publish-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/del-cli-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/git-branch-is-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/husky-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/migrate-travis-ci-to-azure-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/is-git-status-clean-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/lint-staged-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/prettier-package-json-'),
          startsWith(variables['Build.SourceBranch'], 'refs/heads/renovate/sort-package-json-')
        ))
      )
